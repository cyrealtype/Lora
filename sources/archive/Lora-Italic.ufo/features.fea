# automatic
@Uppercase = [ A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adieresis Adotbelow Agrave Ahookabove Amacron Aogonek Aring Atilde AE B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Eth Dcaron Dcroat E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehookabove Emacron Eogonek Etilde Ezh Ezhcaron F G Gbreve Gcaron Gcircumflex Gcommaaccent Gstroke H Hbar Hcaron Hcircumflex I Iacute Ibreve Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihookabove Imacron Iogonek Itilde J Jcircumflex K Kcaron Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M N Nacute Ncaron Ncommaaccent Eng Ntilde O Oacute Obreve Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odieresis Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Oslash Oslashacute Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls Schwa T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucaron Ucircumflex Udieresis Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V W X Y Yacute Ydieresis Ydotbelow Ygrave Yhookabove Ytilde Z Zacute Zcaron Zdotaccent A-cy Be-cy Ve-cy Ge-cy Gje-cy Gheupturn-cy De-cy De-cy.loclBGR Ie-cy Iegrave-cy Io-cy Zhe-cy Ze-cy Ii-cy Iishort-cy Iigrave-cy Iishorttail-cy Ka-cy Kje-cy El-cy El-cy.loclBGR Em-cy En-cy O-cy Pe-cy Er-cy Es-cy Te-cy U-cy Ushort-cy Ef-cy Ef-cy.loclBGR Ha-cy Che-cy Tse-cy Sha-cy Shcha-cy Dzhe-cy Softsign-cy Hardsign-cy Yeru-cy Lje-cy Nje-cy Dze-cy E-cy Ereversed-cy I-cy Yi-cy Je-cy Tshe-cy Iu-cy Ia-cy Dje-cy Yat-cy Yusbig-cy Fita-cy Izhitsa-cy Ghestroke-cy Ghestroke-cy.loclBSH Ghemiddlehook-cy Zhedescender-cy Zedescender-cy Zedescender-cy.loclBSH Kadescender-cy Kaverticalstroke-cy Kastroke-cy Kabashkir-cy Endescender-cy Enghe-cy Pedescender-cy Haabkhasian-cy Esdescender-cy Esdescender-cy.loclBSH Esdescender-cy.loclCHU Tedescender-cy Ustraight-cy Ustraightstroke-cy Hadescender-cy Tetse-cy Chedescender-cy Cheverticalstroke-cy Shha-cy Shhadescender-cy EnLeftHook-cy Eldescender-cy Cheabkhasian-cy Chedescenderabkhasian-cy Palochka-cy Zhebreve-cy Kahook-cy Eltail-cy Enhook-cy Entail-cy Chekhakassian-cy Emtail-cy Abreve-cy Adieresis-cy Aie-cy Iebreve-cy Schwa-cy Schwadieresis-cy Zhedieresis-cy Zedieresis-cy Dzeabkhasian-cy Imacron-cy Idieresis-cy Odieresis-cy Obarred-cy Obarreddieresis-cy Edieresis-cy Umacron-cy Udieresis-cy Uhungarumlaut-cy Chedieresis-cy Gedescender-cy Yerudieresis-cy Gestrokehook-cy Hahook-cy Hastroke-cy Reversedze-cy Elhook-cy Qa-cy We-cy Semisoftsign-cy Ertick-cy Gamma Delta Pi Omega angstrom kelvin ];

@figures = [ zero one two three four five six seven eight nine  ];

@figures_tf = [ zero.tf one.tf two.tf three.tf four.tf five.tf six.tf seven.tf eight.tf nine.tf  ];

# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem cyrl dflt;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
languagesystem cyrl SRB;
languagesystem cyrl MKD;
languagesystem cyrl BGR;


feature aalt {
# automatic
feature locl;
feature sups;
feature frac;
feature ordn;
feature case;
feature calt;
feature pnum;
feature tnum;

} aalt;

feature ccmp {
# automatic
lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [cedillacomb dotbelowcomb ogonekcomb horncomb strokelongcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresiscomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb tildecomb cedillacomb circumflex hungarumlaut brevecomb-cy brevecomb_acutecomb brevecomb_gravecomb brevecomb_hookabovecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_hookabovecomb circumflexcomb_tildecomb];
	@MarkscombCase = [dieresiscomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case cedillacomb.case circumflex.case hungarumlaut.case brevecomb-cy.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_hookabovecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_hookabovecomb.case circumflexcomb_tildecomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;
} ccmp_latn_1;

script latn;

} ccmp;

feature locl {
# automatic
script latn;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language CAT;
sub l periodcentered' l by periodcentered.loclCAT;
sub L periodcentered' L by periodcentered.loclCAT;

script cyrl;
language SRB;
sub be-cy by be-cy.loclSRB;
sub ge-cy by ge-cy.loclSRB;
sub de-cy by de-cy.loclSRB;
sub pe-cy by pe-cy.loclSRB;
sub te-cy by te-cy.loclSRB;
language CHU;
sub Esdescender-cy by Esdescender-cy.loclCHU;
sub esdescender-cy by esdescender-cy.loclCHU;
language MKD;
sub gje-cy by gje-cy.loclMKD;
language BSH;
sub Ghestroke-cy by Ghestroke-cy.loclBSH;
sub Zedescender-cy by Zedescender-cy.loclBSH;
sub Esdescender-cy by Esdescender-cy.loclBSH;
sub ghestroke-cy by ghestroke-cy.loclBSH;
sub zedescender-cy by zedescender-cy.loclBSH;
sub esdescender-cy by esdescender-cy.loclBSH;
language BGR;
sub De-cy by De-cy.loclBGR;
sub El-cy by El-cy.loclBGR;
sub Ef-cy by Ef-cy.loclBGR;
sub ve-cy by ve-cy.loclBGR;
sub de-cy by de-cy.loclBGR;
sub zhe-cy by zhe-cy.loclBGR;
sub ze-cy by ze-cy.loclBGR;
sub ka-cy by ka-cy.loclBGR;
sub el-cy by el-cy.loclBGR;
sub che-cy by che-cy.loclBGR;
sub iu-cy by iu-cy.loclBGR;

} locl;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;

} sups;

feature frac {
# automatic
sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;

} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
sub N o period by numero;

} ordn;

feature case {
# automatic
sub colon by colon.case;
sub colon.tf by colon.tf.case;
sub dieresiscomb by dieresiscomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub cedillacomb by cedillacomb.case;
sub circumflex by circumflex.case;
sub hungarumlaut by hungarumlaut.case;
sub brevecomb-cy by brevecomb-cy.case;
sub brevecomb_acutecomb by brevecomb_acutecomb.case;
sub brevecomb_gravecomb by brevecomb_gravecomb.case;
sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.case;
sub brevecomb_tildecomb by brevecomb_tildecomb.case;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;
sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.case;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;

} case;

feature liga {
# automatic
sub f i by fi;
sub f l by fl;

} liga;

feature calt {
sub @figures colon' by colon.case;
sub colon' @figures by colon.case;

sub @figures_tf colon.tf' by colon.tf.case;
sub colon.tf' @figures_tf by colon.tf.case;
} calt;

feature pnum {
# automatic
sub zero.tf by zero;
sub one.tf by one;
sub two.tf by two;
sub three.tf by three;
sub four.tf by four;
sub five.tf by five;
sub six.tf by six;
sub seven.tf by seven;
sub eight.tf by eight;
sub nine.tf by nine;
sub period.tf by period;
sub comma.tf by comma;
sub colon.tf by colon;
sub semicolon.tf by semicolon;
sub numbersign.tf by numbersign;
sub space.tf by space;
sub cent.tf by cent;
sub currency.tf by currency;
sub dollar.tf by dollar;
sub euro.tf by euro;
sub florin.tf by florin;
sub hryvnia.tf by hryvnia;
sub liraTurkish.tf by liraTurkish;
sub ruble.tf by ruble;
sub sterling.tf by sterling;
sub tenge.tf by tenge;
sub tugrik.tf by tugrik;
sub yen.tf by yen;
sub plus.tf by plus;
sub minus.tf by minus;
sub multiply.tf by multiply;
sub divide.tf by divide;
sub equal.tf by equal;
sub notequal.tf by notequal;
sub greater.tf by greater;
sub less.tf by less;
sub greaterequal.tf by greaterequal;
sub lessequal.tf by lessequal;
sub plusminus.tf by plusminus;
sub approxequal.tf by approxequal;
sub logicalnot.tf by logicalnot;
sub percent.tf by percent;
sub section.tf by section;

} pnum;

feature tnum {
# automatic
sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
sub period by period.tf;
sub comma by comma.tf;
sub colon by colon.tf;
sub semicolon by semicolon.tf;
sub numbersign by numbersign.tf;
sub space by space.tf;
sub cent by cent.tf;
sub currency by currency.tf;
sub dollar by dollar.tf;
sub euro by euro.tf;
sub florin by florin.tf;
sub hryvnia by hryvnia.tf;
sub liraTurkish by liraTurkish.tf;
sub ruble by ruble.tf;
sub sterling by sterling.tf;
sub tenge by tenge.tf;
sub tugrik by tugrik.tf;
sub yen by yen.tf;
sub plus by plus.tf;
sub minus by minus.tf;
sub multiply by multiply.tf;
sub divide by divide.tf;
sub equal by equal.tf;
sub notequal by notequal.tf;
sub greater by greater.tf;
sub less by less.tf;
sub greaterequal by greaterequal.tf;
sub lessequal by lessequal.tf;
sub plusminus by plusminus.tf;
sub approxequal by approxequal.tf;
sub logicalnot by logicalnot.tf;
sub percent by percent.tf;
sub section by section.tf;

} tnum;
